//import com.jmo.streamlets.utils.StreamletUtils;
//import org.apache.heron.streamlet.Builder;
//import org.apache.heron.streamlet.Config;
//import org.apache.heron.streamlet.Runner;
//import org.apache.heron.streamlet.impl.BuilderImpl;

//import java.util.logging.Logger;

// public class CLASSNAME {

//  private static final Logger LOG = Logger.getLogger(CLASSNAME.class.getName());

//  private static String topologyName;

//  public CLASSNAME() {
//    LOG.info(">>> CLASSNAME constructor");
//  }

//  public static void main(String[] args) throws Exception {
//    CLASSNAME streamletInstance = new CLASSNAME();
//    topologyName = StreamletUtils.getTopologyName(args);
//    streamletInstance.runStreamlet();
//  }
// }

//  public void runStreamlet() {
//    LOG.info(">>> run CLASSNAME...");

//    Builder builder = Builder.newBuilder();

//      //Add processingGraph here

//    Config config = StreamletUtils.getAtLeastOnceConfig();
//    if (topologyName == null)
//      StreamletUtils.runInSimulatorMode((BuilderImpl) builder, config);
//    else
//      new Runner().run(topologyName, config, builder);
//  }

  //
  // Topology specific setup and processing graph creation.
  //